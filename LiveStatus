# Import packages
import requests
from bs4 import BeautifulSoup
import time # Import the time module for request rate limiting


#Define User-Agent header to mimic real browsing
headers = {
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36'
}


################################################################################################### Great Minds ###########################################################################################


################################################################################################### IXL ####################################################################################################

################################################################################################### Carniege Learning ######################################################################################


################################################################################################### Bluebonnet Learning (1st and 2nd) ######################################################################

################################################################################################### Savvas ####################################################################################################

################################################################################################### Eduphoria ###################################################################

################################################################################################### Eduphoria Lead4ward ###################################################################

################################################################################################### Eduphoria Direct Database ###################################################################

################################################################################################### Edgenuity ####################################################################################################

################################################################################################### TextHelp ####################################################################################################


################################################################################################### NWEA ####################################################################################################


################################################################################################### Eduphoria TEKS Bank ####################################################################################################


################################################################################################### Quizizz ####################################################################################################


################################################################################################### Voyager Sopris West ####################################################################################################


################################################################################################### Ellevation Strategies ####################################################################################################


################################################################################################### Ellevation ####################################################################################################


################################################################################################### UFLI ####################################################################################################


################################################################################################### Estrellitas ####################################################################################################


################################################################################################### BrainPop ####################################################################################################


################################################################################################### Beanstack ####################################################################################################


################################################################################################### TextQuest ####################################################################################################


################################################################################################### Gizmos ####################################################################################################


################################################################################################### Study Sync ####################################################################################################


################################################################################################### Jarrett ####################################################################################################


################################################################################################### Studies Weekly ####################################################################################################


################################################################################################### Social Studies Success ####################################################################################################


################################################################################################### Cengage ####################################################################################################


################################################################################################### Bedford, Freeman, Worth ####################################################################################################


################################################################################################### Myers Psychology ####################################################################################################


################################################################################################### World Book ####################################################################################################



################################################################################## Start of Technology software status ############################################################################################

################################################################################################### ClassLink ####################################################################################################

# URLs to be scraped
classlink = "https://status.classlink.com/"


# Send an HTTP Request to URL to obtain data
print(f"Attempting to fetch content from: {classlink}")
try:
    response = requests.get(classlink, headers=headers)
    response.raise_for_status() #Raise exception for bad status codes
    print("Successfully fetched the web page content.")

except requests.exceptions.RequestException as e:
    print(f"Error fetching URL: {e}")
    print("Please check your internet connection or the URL.")
    exit()


print("\n--- First 500 characters of raw HTML ---")
print(response.text[:500])
print("-----------------------------------------\n")



# Parse HTML content using Beautiful Soup
soup_cl = BeautifulSoup(response.text, 'html.parser')
print("HTML content successfully parsed by BeautifulSoup.")




status_cl = soup_cl.find_all('h2', class_="status font-large")
status_cl




################################################################################################### Incident IQ ###################################################################################################

# URLs to be scraped
IIQ = "https://status.incidentiq.com/"


# Send an HTTP Request to URL to obtain data
print(f"Attempting to fetch content from: {IIQ}")
try:
    response = requests.get(IIQ, headers=headers)
    response.raise_for_status() #Raise exception for bad status codes
    print("Successfully fetched the web page content.")

except requests.exceptions.RequestException as e:
    print(f"Error fetching URL: {e}")
    print("Please check your internet connection or the URL.")
    exit()


print("\n--- First 500 characters of raw HTML ---")
print(response.text[:500])
print("-----------------------------------------\n")



# Parse HTML content using Beautiful Soup
soup_IIQ = BeautifulSoup(response.text, 'html.parser')
print("HTML content successfully parsed.")




status_IIQ = soup_IIQ.find_all('h2', class_="status font-large")
status_IIQ



################################################################################################### Raptor ####################################################################################################

# URLs to be scraped
raptor = "https://status.raptortech.com/"


# Send an HTTP Request to URL to obtain data
print(f"Attempting to fetch content from: {raptor}")
try:
    response = requests.get(raptor, headers=headers)
    response.raise_for_status() #Raise exception for bad status codes
    print("Successfully fetched the web page content.")

except requests.exceptions.RequestException as e:
    print(f"Error fetching URL: {e}")
    print("Please check your internet connection or the URL.")
    exit()


print("\n--- First 500 characters of raw HTML ---")
print(response.text[:500])
print("-----------------------------------------\n")



# Parse HTML content using Beautiful Soup
soup_raptor = BeautifulSoup(response.text, 'html.parser')
print("HTML content successfully parsed.")




status_raptor = soup_raptor.find_all('strong', id="statusbar_text")
status_raptor
